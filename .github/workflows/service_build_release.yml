name: Build and Release Service

on:
  push:
    branches:
      - main 
    paths:
      - '**/*.java'
      - '**/application.properties'
      - '**/resources/*'
      - '*.gradle'
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: service-jar
          path: build/libs/*.jar

        

  prepare_release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      new-tag: ${{ steps.new_version.outputs.NEW_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: tag_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 --match "v*" || echo "v0.0.0")
          echo "TAG=$latest_tag" >> $GITHUB_ENV

      - name: Increment version
        id: new_version
        run: |
          latest_tag=${{ env.TAG }}
          major=$(echo "$latest_tag" | cut -d '.' -f1)
          minor=$(echo "$latest_tag" | cut -d '.' -f2)
          patch=$(echo "$latest_tag" | cut -d '.' -f3)
          new_version="$major.$minor.$((patch + 1))"
          echo "NEW_TAG=$new_version" >> $GITHUB_ENV
          echo "NEW_TAG=$new_version" >> $GITHUB_OUTPUT
      

      - name: Create and push new tag
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_TAG }}

      - name: Update build.gradle
        run: |
          new_version=${{ env.NEW_TAG }}
          sed -i "/version =/c\version = '$new_version'" build.gradle

      - name: Update docker-compose.yml
        run: |
          new_jar_name="${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}-${{ env.NEW_TAG }}.jar"
          sed -i "s|./build/libs/${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}-v*.jar|./build/libs/$new_jar_name|g" docker-compose.yml

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add build.gradle
          git add docker-compose.yml
          git commit -m "Update build.gradle & docker-compose to ${{ env.NEW_TAG }}"
          git push

  release:
    needs: prepare_release
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: service-jar

      - name: Artifact rename
        run: |
          ls -l
          echo "Renaming artifact jar"
          mv *.jar ${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}-${{  needs.prepare_release.outputs.new-tag }}.jar
          ls -l

      - name: Creating Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "${{  needs.prepare_release.outputs.new-tag }}"
          title: "Release ${{  needs.prepare_release.outputs.new-tag }}"
          files: |
            *.jar
